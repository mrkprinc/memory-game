{"version":3,"sources":["components/CardSide.js","components/Card.js","components/Scoreboard.js","App.js","index.js"],"names":["CardSide","props","react_default","a","createElement","className","concat","side","src","images","imgId","alt","text","data-imgid","Card","onClick","handleClick","style","transitionDelay","index","components_CardSide","frontImgIndex","backImgIndex","Scoreboard","App","state","score","guessed","front","back","e","clickedImg","target","getAttribute","_this","badClick","setState","prevState","shuffleBackSide","flipCards","backSide","document","querySelector","classList","contains","this","Object","defineProperty","shuffleArray","console","log","arr","i","length","j","Math","floor","random","_ref","querySelectorAll","forEach","element","toggle","cards","card","components_Card","key","push","id","components_Scoreboard","Component","ReactDOM","render","src_App","getElementById"],"mappings":"6qBAWeA,EARE,SAAAC,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,QAAAC,OAAUL,EAAMM,KAAhB,YACZL,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,EAAOR,EAAMS,OAAOF,IAAKG,IAAKF,EAAOR,EAAMS,OAAOE,KAAMC,aAAYZ,EAAMS,UCO3EI,EAVF,SAAAb,GACX,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBU,QAASd,EAAMe,aAC7Cd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOY,MAAO,CAACC,gBAAe,GAAAZ,OAAKL,EAAMkB,MAAQ,GAAnB,OAC3CjB,EAAAC,EAAAC,cAACgB,EAAD,CAAUb,KAAK,QAAQG,MAAOT,EAAMoB,gBACpCnB,EAAAC,EAAAC,cAACgB,EAAD,CAAUb,KAAK,OAAOG,MAAOT,EAAMqB,kBCA1BC,EANI,SAAAtB,GACjB,OACEC,EAAAC,EAAAC,cAAA,iDC4EWoB,6MA1EbC,MAAQ,CACNC,MAAO,EACPC,QAAS,GACTC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAGjCb,YAAc,SAAAc,GACZ,IAAMC,EAAaD,EAAEE,OAAOC,aAAa,cACtCC,EAAKT,MAAME,QAAQI,GACpBG,EAAKC,WAELD,EAAKE,SAAS,SAAAC,GAEZ,OADAA,EAAUV,QAAQI,IAAc,EACzB,CAACJ,QAASU,EAAUV,WAG/BO,EAAKI,kBACLJ,EAAKK,8FAIL,IAAMC,EAAWC,SAASC,cAAc,SAASC,UAAUC,SAAS,QAAU,QAAU,OACxFC,KAAKT,SAALU,OAAAC,EAAA,EAAAD,CAAA,GAAgBN,EAAWK,KAAKG,oDAKhCC,QAAQC,IAAI,qDAKZ,IADA,IAAIC,EAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACtC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADJM,EAEnB,CAACP,EAAIG,GAAIH,EAAIC,IAA/BD,EAAIC,GAFiCM,EAAA,GAE7BP,EAAIG,GAFyBI,EAAA,GAIxC,OAAOP,sCAIPV,SAASkB,iBAAiB,SAASC,QAAQ,SAAAC,GACzCA,EAAQlB,UAAUmB,OAAO,2CAM3B,IADA,IAAIC,EAAQ,GACJX,EAAE,EAAGA,EAAE3C,EAAO4C,OAAQD,IAAK,CACjC,IAAIY,EAAQ9D,EAAAC,EAAAC,cAAC6D,EAAD,CACV9C,MAAOiC,EACPc,IAAKd,EACL/B,cAAewB,KAAKpB,MAAMG,MAAMwB,GAChC9B,aAAcuB,KAAKpB,MAAMI,KAAKuB,GAC9BpC,YAAa6B,KAAK7B,cAEpB+C,EAAMI,KAAKH,GAEb,OACE9D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UACdH,EAAAC,EAAAC,cAAA,6BAEAF,EAAAC,EAAAC,cAAA,WAASgE,GAAG,SACTL,GAGH7D,EAAAC,EAAAC,cAAA,WAASgE,GAAG,cACVlE,EAAAC,EAAAC,cAACiE,EAAD,eApEQC,aCDlBC,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,MAAShC,SAASiC,eAAe","file":"static/js/main.9313d76c.chunk.js","sourcesContent":["import React from \"react\";\nimport images from \"../images.json\";\n\nconst CardSide = props => {\n  return(\n    <div className={`card-${props.side} center`}>\n      <img src={images[props.imgId].src} alt={images[props.imgId].text} data-imgid={props.imgId} />\n    </div>\n  )\n}\n\nexport default CardSide;","import React from \"react\";\nimport CardSide from \"./CardSide\";\n\nconst Card = props => {\n  return(\n  <div className='card-container' onClick={props.handleClick}>\n    <div className='card' style={{transitionDelay: `${props.index / 20}s`}}>\n      <CardSide side='front' imgId={props.frontImgIndex} />\n      <CardSide side='back' imgId={props.backImgIndex} />\n    </div>\n  </div>\n)}\n\nexport default Card;","import React from \"react\";\n\nconst Scoreboard = props => {\n  return (\n    <div>Don't click the same image twice!</div>\n  )\n}\n\nexport default Scoreboard;","import React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport Scoreboard from \"./components/Scoreboard\";\nimport images from \"./images.json\";\n\nclass App extends Component {\n  state = {\n    score: 0,\n    guessed: {},\n    front: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n    back: [8, 7, 6, 5, 4, 3, 2, 1, 0]\n  };\n\n  handleClick = e => {\n    const clickedImg = e.target.getAttribute('data-imgId');\n    if(this.state.guessed[clickedImg]) {\n      this.badClick();\n    } else {\n      this.setState(prevState => {\n        prevState.guessed[clickedImg] = true;\n        return {guessed: prevState.guessed};\n      })\n    }\n    this.shuffleBackSide();\n    this.flipCards();\n  }\n\n  shuffleBackSide() {\n    const backSide = document.querySelector('.card').classList.contains('flip') ? 'front' : 'back';\n    this.setState({[backSide]: this.shuffleArray()});\n  }\n\n  badClick() {\n    // TEMP\n    console.log('bad click!');\n  }\n\n  shuffleArray() {\n    let arr = [0, 1, 2, 3, 4, 5, 6 ,7, 8];\n    for(let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  flipCards() {\n    document.querySelectorAll('.card').forEach(element => {\n      element.classList.toggle('flip');\n    })\n  }\n\n  render() {\n    let cards = [];\n    for(let i=0; i<images.length; i++) {\n      let card = (<Card \n        index={i}\n        key={i}\n        frontImgIndex={this.state.front[i]}\n        backImgIndex={this.state.back[i]}\n        handleClick={this.handleClick}\n      />)\n      cards.push(card);\n    }\n    return (\n      <main className='center'>\n        <header>Memory Game</header>\n\n        <section id='cards'>\n          {cards}\n        </section>\n        \n        <section id='scoreboard'>\n          <Scoreboard />\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}