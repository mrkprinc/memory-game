{"version":3,"sources":["components/CardSide.js","components/Card.js","components/Scoreboard.js","App.js","index.js"],"names":["CardSide","props","react_default","a","createElement","className","concat","side","src","images","imgId","alt","text","data-imgid","Card","onClick","handleClick","style","transitionDelay","index","components_CardSide","frontImgIndex","backImgIndex","Scoreboard","prevProps","this","score","fullWidth","document","getElementById","clientWidth","width","id","React","Component","App","state","guessed","front","back","e","clickedImg","target","getAttribute","_this","badClick","goodClick","shuffleBackSide","flipCards","innerHTML","setState","prevState","backSide","querySelector","classList","contains","Object","defineProperty","shuffleArray","arr","i","length","j","Math","floor","random","_ref","querySelectorAll","forEach","element","toggle","cards","card","components_Card","key","push","components_Scoreboard","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.63c418bc.chunk.js","sourcesContent":["import React from \"react\";\nimport images from \"../images.json\";\n\nconst CardSide = props => {\n  return(\n    <div className={`card-${props.side} center`}>\n      <img src={images[props.imgId].src} alt={images[props.imgId].text} data-imgid={props.imgId} />\n    </div>\n  )\n}\n\nexport default CardSide;","import React from \"react\";\nimport CardSide from \"./CardSide\";\n\nconst Card = props => {\n  return(\n  <div className='card-container' onClick={props.handleClick}>\n    <div className='card' style={{transitionDelay: `${props.index / 20}s`}}>\n      <CardSide side='front' imgId={props.frontImgIndex} />\n      <CardSide side='back' imgId={props.backImgIndex} />\n    </div>\n  </div>\n)}\n\nexport default Card;","import React from \"react\";\n\nclass Scoreboard extends React.Component {\n  componentDidUpdate(prevProps) {\n    if(this.props.score !== prevProps.score) {\n      let fullWidth = document.getElementById('scoreBoard').clientWidth;\n      document.getElementById('scoreBar').style.width = `${fullWidth * this.props.score / 9}px`;\n    }\n  }\n\n  render() {\n    return (\n    <div id='scoreBoard'>\n      <div id='msg'>Don't click the same image twice!</div>\n      <div id='scoreBar'></div>\n    </div>\n    )\n  }\n}\n\nexport default Scoreboard;","import React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport Scoreboard from \"./components/Scoreboard\";\nimport images from \"./images.json\";\n\nclass App extends Component {\n  state = {\n    score: 0,\n    guessed: {},\n    front: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n    back: [8, 7, 6, 5, 4, 3, 2, 1, 0]\n  };\n\n  handleClick = e => {\n    const clickedImg = e.target.getAttribute('data-imgId');\n    if(this.state.guessed[clickedImg]) {\n      this.badClick();\n    } else {\n      this.goodClick(clickedImg);\n    }\n    this.shuffleBackSide();\n    this.flipCards();\n  }\n\n  goodClick(clickedImg) {\n    document.getElementById('msg').innerHTML = \"Don't click the same image twice!\";\n    this.setState(prevState => {\n      prevState.guessed[clickedImg] = true;\n      prevState.score++;\n      return {guessed: prevState.guessed, score: prevState.score};\n    })\n  }\n\n  badClick() {\n    this.setState({score: 0, guessed: {}})\n    document.getElementById('msg').innerHTML = 'You already guessed that one!';\n  }\n\n  shuffleBackSide() {\n    const backSide = document.querySelector('.card').classList.contains('flip') ? 'front' : 'back';\n    this.setState({[backSide]: this.shuffleArray()});\n  }\n\n  shuffleArray() {\n    let arr = [0, 1, 2, 3, 4, 5, 6 ,7, 8];\n    for(let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  flipCards() {\n    document.querySelectorAll('.card').forEach(element => {\n      element.classList.toggle('flip');\n    })\n  }\n\n  render() {\n    let cards = [];\n    for(let i=0; i<images.length; i++) {\n      let card = (<Card \n        index={i}\n        key={i}\n        frontImgIndex={this.state.front[i]}\n        backImgIndex={this.state.back[i]}\n        handleClick={this.handleClick}\n      />)\n      cards.push(card);\n    }\n    return (\n      <main className='center'>\n        <header>Memory Game</header>\n\n        <section id='cards'>\n          {this.state.score < 9 ? cards : <span className='win-msg'>You win!</span>}\n        </section>\n        \n        <section id='scoreboard'>\n          <Scoreboard score={this.state.score} />\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}